# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
      

  ubuntu-latest-spack-netcdf-job:
    name: "ubuntu-latest-tempestremap"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        pwd
        ls
        hostnamectl status  
    - name: "basic commands"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        # set -eox pipefail #safety for script
        cd ~ && whoami 
    - name: "install dependencies"
      run: |
          sudo apt-get update
          sudo apt-get install libtool
          sudo apt-get install libblas-dev 
          sudo apt-get install liblapack-dev
          sudo apt-get install libnetcdf-dev
          python -m pip install --upgrade pip
          pip install numpy pandas 
    - name: Installation
      run: |
        mydir=/home/runner/work/tempestremap/tempestremap
        export TR_DIR=$mydir/tr/install
        cd $mydir
        ls -ltrh
        which autoreconf
        git branch -a
        git pull
        git checkout vijaysm/new-fixes
        autoreconf -fi
        ls
        ./configure --prefix=$TR_DIR
        make -j
        make install
        PATH=$TR_DIR/bin:$PATH
        echo $PATH
        ls $TR_DIR/bin
        cd regression_tests
        # TODO: copy baselines from server, now run and compare against baseline
        python regression_tests.py -v -p $TR_DIR/bin -n 4
       

        

